{"version":3,"file":"477.js","mappings":"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","sources":["webpack://sleact-ts-front/./components/InviteChannelModal/index.tsx","webpack://sleact-ts-front/./components/Modal/styles.tsx","webpack://sleact-ts-front/./components/Modal/index.tsx","webpack://sleact-ts-front/./hooks/useInput.ts","webpack://sleact-ts-front/./hooks/useSocket.ts","webpack://sleact-ts-front/./layouts/Workspace/styles.tsx","webpack://sleact-ts-front/./components/DMList/styles.tsx","webpack://sleact-ts-front/./components/ChannelList/index.tsx","webpack://sleact-ts-front/./components/CreateChannelModal/index.tsx","webpack://sleact-ts-front/./components/DMList/index.tsx","webpack://sleact-ts-front/./components/InviteWorkspaceModal/index.tsx","webpack://sleact-ts-front/./components/Menu/styles.tsx","webpack://sleact-ts-front/./components/Menu/index.tsx","webpack://sleact-ts-front/./layouts/Workspace/index.tsx","webpack://sleact-ts-front/./pages/SignUp/styles.tsx","webpack://sleact-ts-front/./utils/fetcher.ts"],"sourcesContent":["import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteChannelModal: (flag: boolean) => void;\r\n}\r\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n  const { revalidate: revalidateMembers } = useSWR<IUser[]>(\r\n    userData && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then(() => {\r\n          revalidateMembers();\r\n          setShowInviteChannelModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newMember],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>채널 멤버 초대</span>\r\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteChannelModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateModal = styled.div`\r\n  position: fixed;\r\n  text-align: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 1022;\r\n  & > div {\r\n    margin-top: 200px;\r\n    display: inline-block;\r\n    width: 440px;\r\n    background: white;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    max-width: 440px;\r\n    padding: 30px 40px 0;\r\n    z-index: 1012;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import { CreateModal, CloseModalButton } from '@components/Modal/styles';\r\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n}\r\n\r\nconst Modal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <CreateModal onClick={onCloseModal}>\r\n      <div onClick={stopPropagation}>\r\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\r\n        {children}\r\n      </div>\r\n    </CreateModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\r\n\r\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\r\n\r\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\r\n  const [value, setValue] = useState(initialData);\r\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value as unknown as T);\r\n  }, []);\r\n  return [value, handler, setValue];\r\n};\r\n\r\nexport default useInput;\r\n","import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\n\r\nconst backUrl = 'http://localhost:3095';\r\n\r\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\r\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n  console.log('rerender', workspace);\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect();\r\n      delete sockets[workspace];\r\n    }\r\n  }, [workspace]);\r\n  if (!workspace) {\r\n    return [undefined, disconnect];\r\n  }\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\r\n      transports: ['websocket'],\r\n    });\r\n  }\r\n\r\n  return [sockets[workspace], disconnect];\r\n};\r\n\r\nexport default useSocket;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RightMenu = styled.div`\r\n  float: right;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 38px;\r\n  background: #350d36;\r\n  color: #ffffff;\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 16px;\r\n`;\r\n\r\nexport const ProfileModal = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  & img {\r\n    display: flex;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n  & #profile-name {\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n  }\r\n  & #profile-active {\r\n    font-size: 13px;\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nexport const LogOutButton = styled.button`\r\n  border: none;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(29, 28, 29);\r\n  background: transparent;\r\n  display: block;\r\n  height: 33px;\r\n  padding: 5px 20px 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Workspaces = styled.div`\r\n  width: 65px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #3f0e40;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-right: 1px solid rgb(82, 38, 83);\r\n  vertical-align: top;\r\n  text-align: center;\r\n  padding: 15px 0 0;\r\n`;\r\n\r\nexport const Channels = styled.nav`\r\n  width: 260px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  background: #3f0e40;\r\n  color: rgb(188, 171, 188);\r\n  vertical-align: top;\r\n  & a {\r\n    padding-left: 36px;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    &.selected {\r\n      color: white;\r\n    }\r\n  }\r\n  & .bold {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n  & .count {\r\n    margin-left: auto;\r\n    background: #cd2553;\r\n    border-radius: 16px;\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    height: 18px;\r\n    line-height: 18px;\r\n    padding: 0 9px;\r\n    color: white;\r\n    margin-right: 16px;\r\n  }\r\n  & h2 {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceName = styled.button`\r\n  height: 64px;\r\n  line-height: 64px;\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-bottom: 1px solid rgb(82, 38, 83);\r\n  font-weight: 900;\r\n  font-size: 24px;\r\n  background: transparent;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 0;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuScroll = styled.div`\r\n  height: calc(100vh - 102px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const WorkspaceModal = styled.div`\r\n  padding: 10px 0 0;\r\n  & h2 {\r\n    padding-left: 20px;\r\n  }\r\n  & > button {\r\n    width: 100%;\r\n    height: 28px;\r\n    padding: 4px;\r\n    border: none;\r\n    background: transparent;\r\n    border-top: 1px solid rgb(28, 29, 28);\r\n    cursor: pointer;\r\n    &:last-of-type {\r\n      border-bottom: 1px solid rgb(28, 29, 28);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Chats = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  color: white;\r\n  font-size: 24px;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceButton = styled.button`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  background: white;\r\n  border: 3px solid #3f0e40;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\r\n  background: transparent;\r\n  border: none;\r\n  width: 26px;\r\n  height: 26px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  ${({ collapse }) =>\r\n    collapse &&\r\n    `\r\n    & i {\r\n      transform: none;\r\n    }\r\n  `};\r\n`;\r\n","// import useSocket from '@hooks/useSocket';\r\nimport { CollapseButton } from '@components/DMList/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\nconst ChannelList: FC = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  // const [socket] = useSocket(workspace);\r\n  const {\r\n    data: userData,\r\n    error,\r\n    revalidate,\r\n    mutate,\r\n  } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Channels</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          channelData?.map((channel) => {\r\n            return (\r\n              <NavLink\r\n                key={channel.name}\r\n                activeClassName=\"selected\"\r\n                to={`/workspace/${workspace}/channel/${channel.name}`}\r\n              >\r\n                <span># {channel.name}</span>\r\n              </NavLink>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { useCallback, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowCreateChannelModal: (flag: boolean) => void;\r\n}\r\n// children 안쓰면 VFC 쓰면 FC\r\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\r\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\r\n\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n\r\n  const {\r\n    data: userData,\r\n    error,\r\n    revalidate,\r\n    mutate,\r\n  } = useSWR<IUser | false>('/api/users', fetcher, { dedupingInterval: 2000 /* 2초 */ });\r\n  const { data: channelData, revalidate: revalidateChannel } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onCreateChannel = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          `/api/workspaces/${workspace}/channels`,\r\n          {\r\n            name: newChannel,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then(() => {\r\n          revalidateChannel();\r\n          setShowCreateChannelModal(false);\r\n          setNewChannel('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newChannel],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onCreateChannel}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널</span>\r\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\r\n        </Label>\r\n        <Button type=\"submit\">생성하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal;\r\n","import { IDM, IUser, IUserWithOnline } from '@typings/db';\r\nimport { CollapseButton } from '@components/DMList/styles';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst DMList: FC = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n\r\n  const [socket] = useSocket(workspace);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const [countList, setCountList] = useState<{ [key: string]: number }>({});\r\n  const [onlineList, setOnlineList] = useState<number[]>([]);\r\n\r\n  const {\r\n    data: userData,\r\n    error,\r\n    revalidate,\r\n    mutate,\r\n  } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n\r\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  const resetCount = useCallback(\r\n    (id) => () => {\r\n      setCountList((list) => {\r\n        return {\r\n          ...list,\r\n          [id]: 0,\r\n        };\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onMessage = (data: IDM) => {\r\n    console.log('dm왔다', data);\r\n    setCountList((list) => {\r\n      return {\r\n        ...list,\r\n        [data.SenderId]: list[data.SenderId] ? list[data.SenderId] + 1 : 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('DMList: workspace 바꼈다', workspace);\r\n    setOnlineList([]);\r\n    setCountList({});\r\n  }, [workspace]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: number[]) => {\r\n      setOnlineList(data);\r\n    });\r\n    // socket?.on('dm', onMessage);\r\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\r\n    return () => {\r\n      // socket?.off('dm', onMessage);\r\n      // console.log('socket off dm', socket?.hasListeners('dm'));\r\n      socket?.off('onlineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Direct Messages</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            const count = countList[member.id] || 0;\r\n            return (\r\n              <NavLink\r\n                key={member.id}\r\n                activeClassName=\"selected\"\r\n                to={`/workspace/${workspace}/dm/${member.id}`}\r\n                onClick={resetCount(member.id)}\r\n              >\r\n                <i\r\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\r\n                    isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\r\n                  }`}\r\n                  aria-hidden=\"true\"\r\n                  data-qa=\"presence_indicator\"\r\n                  data-qa-presence-self=\"false\"\r\n                  data-qa-presence-active=\"false\"\r\n                  data-qa-presence-dnd=\"false\"\r\n                />\r\n                <span className={count > 0 ? 'bold' : undefined}>{member.nickname}</span>\r\n                {member.id === userData?.id && <span> (나)</span>}\r\n                {count > 0 && <span className=\"count\">{count}</span>}\r\n              </NavLink>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DMList;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\r\n}\r\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\r\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n\r\n  const { revalidate: revalidateMember } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then((response) => {\r\n          revalidateMember();\r\n          setShowInviteWorkspaceModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [workspace, newMember],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteWorkspaceModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateMenu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  & > div {\r\n    position: absolute;\r\n    display: inline-block;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    min-width: 360px;\r\n    z-index: 512;\r\n    max-height: calc(100vh - 20px);\r\n    color: rgb(29, 28, 29);\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import { CreateMenu, CloseModalButton } from '@components/Menu/styles';\r\nimport React, { CSSProperties, FC, PropsWithChildren, useCallback } from 'react';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  style: CSSProperties;\r\n  closeButton?: boolean;\r\n}\r\n\r\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <CreateMenu onClick={onCloseModal}>\r\n      <div style={style} onClick={stopPropagation}>\r\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\r\n        {children}\r\n      </div>\r\n    </CreateMenu>\r\n  );\r\n};\r\n\r\nMenu.defaultProps = {\r\n  closeButton: true,\r\n};\r\n\r\nexport default Menu;\r\n","import {\r\n  AddButton,\r\n  Channels,\r\n  Chats,\r\n  Header,\r\n  LogOutButton,\r\n  MenuScroll,\r\n  ProfileImg,\r\n  ProfileModal,\r\n  RightMenu,\r\n  WorkspaceButton,\r\n  WorkspaceModal,\r\n  WorkspaceName,\r\n  WorkspaceWrapper,\r\n  Workspaces,\r\n} from '@layouts/Workspace/styles';\r\n\r\nimport ChannelList from '@components/ChannelList';\r\nimport CreateChannelModal from '@components/CreateChannelModal';\r\nimport DMList from '@components/DMList';\r\nimport InviteChannelModal from '@components/InviteChannelModal';\r\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\r\nimport Menu from '@components/Menu';\r\nimport Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport loadable from '@loadable/component';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport gravatar from 'gravatar';\r\nimport React, { VFC, useCallback, useEffect, useState } from 'react';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useSWR from 'swr';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst Channel = loadable(() => import('@pages/Channel'));\r\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\r\n\r\nconst Workspace: VFC = () => {\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\r\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\r\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\r\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\r\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\r\n\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n\r\n  const {\r\n    data: userData,\r\n    error,\r\n    revalidate,\r\n    mutate,\r\n  } = useSWR<IUser | false>('/api/users', fetcher, { dedupingInterval: 2000 /* 2초 */ });\r\n\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n  const { data: memberData } = useSWR<IUser[]>(userData ? `/api/workspaces/${workspace}/members` : null, fetcher);\r\n  const [socket, disconnect] = useSocket(workspace);\r\n\r\n  useEffect(() => {\r\n    if (channelData && userData && socket) {\r\n      console.log(socket);\r\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\r\n    }\r\n  }, [channelData, userData, socket]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [workspace, disconnect]);\r\n\r\n  const onLogOut = useCallback(() => {\r\n    axios\r\n      .post('/api/users/logout', null, {\r\n        withCredentials: true,\r\n      })\r\n      .then(() => {\r\n        mutate(false, false);\r\n      });\r\n  }, []);\r\n\r\n  const onClickUserProfile = useCallback((e) => {\r\n    e.stopPropagation();\r\n    setShowUserMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickCreateWorkspace = useCallback(() => {\r\n    setShowCreateWorkspaceModal(true);\r\n  }, []);\r\n\r\n  const onCreateWorkspace = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newWorkspace || !newWorkspace.trim()) return;\r\n      if (!newUrl || !newUrl.trim()) return;\r\n      axios\r\n        .post(\r\n          '/api/workspaces',\r\n          {\r\n            workspace: newWorkspace,\r\n            url: newUrl,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then(() => {\r\n          revalidate();\r\n          setShowCreateWorkspaceModal(false);\r\n          setNewWorkspace('');\r\n          setNewUrl('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newWorkspace, newUrl],\r\n  );\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowCreateWorkspaceModal(false);\r\n    setShowCreateChannelModal(false);\r\n    setShowInviteWorkspaceModal(false);\r\n    setShowInviteChannelModal(false);\r\n  }, []);\r\n\r\n  const toggleWorkspaceModal = useCallback(() => {\r\n    setShowWorkspaceModal((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickAddChannel = useCallback(() => {\r\n    setShowCreateChannelModal(true);\r\n  }, []);\r\n\r\n  const onClickInviteWorkspace = useCallback(() => {\r\n    setShowInviteWorkspaceModal(true);\r\n  }, []);\r\n\r\n  if (!userData) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        {userData && (\r\n          <RightMenu>\r\n            <span onClick={onClickUserProfile}>\r\n              <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\r\n            </span>\r\n            {showUserMenu && (\r\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onClickUserProfile}>\r\n                <ProfileModal>\r\n                  <img src={gravatar.url(userData.email, { s: '36px', d: 'retro' })} alt={userData.nickname} />\r\n                  <div>\r\n                    <span id=\"profile-name\">{userData.nickname}</span>\r\n                    <span id=\"profile-active\">Active</span>\r\n                  </div>\r\n                </ProfileModal>\r\n                <LogOutButton onClick={onLogOut}>로그아웃</LogOutButton>\r\n              </Menu>\r\n            )}\r\n          </RightMenu>\r\n        )}\r\n      </Header>\r\n\r\n      <WorkspaceWrapper>\r\n        <Workspaces>\r\n          {userData?.Workspaces.map((ws) => {\r\n            return (\r\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\r\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\r\n              </Link>\r\n            );\r\n          })}\r\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\r\n        </Workspaces>\r\n        <Channels>\r\n          <WorkspaceName onClick={toggleWorkspaceModal}>\r\n            {userData?.Workspaces.find((v) => v.url === workspace)?.name}\r\n          </WorkspaceName>\r\n          <MenuScroll>\r\n            <Menu style={{ top: 95, left: 80 }} show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal}>\r\n              <WorkspaceModal>\r\n                <h2>{userData?.Workspaces.find((v) => v.url === workspace)?.name}</h2>\r\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\r\n                <button onClick={onClickAddChannel}>채널 만들기</button>\r\n                <button onClick={onLogOut}>로그아웃</button>\r\n              </WorkspaceModal>\r\n            </Menu>\r\n            <ChannelList />\r\n            <DMList />\r\n          </MenuScroll>\r\n        </Channels>\r\n        <Chats>\r\n          <Switch>\r\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\r\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\r\n          </Switch>\r\n        </Chats>\r\n      </WorkspaceWrapper>\r\n\r\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\r\n        <form onSubmit={onCreateWorkspace}>\r\n          <Label id=\"workspace-label\">\r\n            <span>워크스페이스 이름</span>\r\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\r\n          </Label>\r\n          <Label id=\"workspace-url-label\">\r\n            <span>워크스페이스 url</span>\r\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\r\n          </Label>\r\n          <Button type=\"submit\">생성하기</Button>\r\n        </form>\r\n      </Modal>\r\n\r\n      <CreateChannelModal\r\n        show={showCreateChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowCreateChannelModal={setShowCreateChannelModal}\r\n      />\r\n\r\n      <InviteWorkspaceModal\r\n        show={showInviteWorkspaceModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\r\n      />\r\n\r\n      <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      />\r\n\r\n      <ToastContainer position=\"bottom-center\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  text-align: center;\r\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\r\n  font-weight: 700;\r\n  font-size: 48px;\r\n  line-height: 46px;\r\n  letter-spacing: -0.75px;\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin: 0 auto;\r\n  width: 400px;\r\n  max-width: 400px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 16px;\r\n  & > span {\r\n    display: block;\r\n    text-align: left;\r\n    padding-bottom: 8px;\r\n    font-size: 15px;\r\n    cursor: pointer;\r\n    line-height: 1.46666667;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border-radius: 4px;\r\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\r\n  border: 1px solid var(--saf-0);\r\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px;\r\n  width: 100%;\r\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\r\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\r\n  padding: 12px;\r\n  height: 44px;\r\n  padding-top: 11px;\r\n  padding-bottom: 13px;\r\n  font-size: 18px;\r\n  line-height: 1.33333333;\r\n  &:focus {\r\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-bottom: 12px;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  color: #fff;\r\n  background-color: #4a154b;\r\n  border: none;\r\n  font-size: 18px;\r\n  font-weight: 900;\r\n  height: 44px;\r\n  min-width: 96px;\r\n  padding: 0 16px 3px;\r\n  transition: all 80ms linear;\r\n  user-select: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\r\n  &:hover {\r\n    background-color: rgba(74, 21, 75, 0.9);\r\n    border: none;\r\n  }\r\n  &:focus {\r\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\r\n  }\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  color: #e01e5a;\r\n  margin: 8px 0 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Success = styled.div`\r\n  color: #2eb67d;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const LinkContainer = styled.p`\r\n  font-size: 13px;\r\n  color: #616061;\r\n  margin: 0 auto 8px;\r\n  width: 400px;\r\n  max-width: 400px;\r\n  & a {\r\n    color: #1264a3;\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n","import axios from 'axios';\r\n\r\nconst fetcher = (url: string) =>\r\n  axios\r\n    .get(url, {\r\n      withCredentials: true,\r\n    })\r\n    .then((response) => response.data); // fetcher를 활용하여 서버에서 받아 온 데이터를 가공하여 사용할 수 있다.\r\n\r\nexport default fetcher;\r\n"],"names":["_ref","show","onCloseModal","setShowInviteChannelModal","_useParams","useParams","workspace","channel","_useInput2","useInput","newMember","onChangeNewMember","setNewMember","userData","useSWR","fetcher","data","revalidateMembers","concat","revalidate","onInviteMember","useCallback","e","preventDefault","trim","axios","email","then","catch","error","_error$response","console","dir","toast","response","position","React","Modal","onSubmit","Label","id","Input","value","onChange","Button","type","CreateModal","styled","_templateObject","_taggedTemplateLiteral","CloseModalButton","_templateObject2","children","stopPropagation","onClick","initialData","_useState2","useState","setValue","target","sockets","log","disconnect","io","transports","undefined","RightMenu","Header","ProfileImg","_templateObject3","ProfileModal","_templateObject4","LogOutButton","_templateObject5","WorkspaceWrapper","_templateObject6","Workspaces","_templateObject7","Channels","_templateObject8","WorkspaceName","_templateObject9","MenuScroll","_templateObject10","WorkspaceModal","_templateObject11","Chats","_templateObject12","AddButton","_templateObject13","WorkspaceButton","_templateObject14","CollapseButton","collapse","_useSWR","dedupingInterval","channelData","mutate","channelCollapse","setChannelCollapse","toggleChannelCollapse","prev","className","map","NavLink","key","name","activeClassName","to","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","_useSWR2","revalidateChannel","onCreateChannel","withCredentials","socket","_slicedToArray","useSocket","_useState4","countList","setCountList","_useState6","onlineList","setOnlineList","memberData","resetCount","list","_objectSpread","_defineProperty","useEffect","on","off","member","isOnline","includes","count","nickname","setShowInviteWorkspaceModal","revalidateMember","CreateMenu","Menu","style","closeButton","defaultProps","Channel","loadable","DirectMessage","_userData$Workspaces$","_userData$Workspaces$2","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","_useState8","showInviteChannelModal","_useState10","showWorkspaceModal","setShowWorkspaceModal","_useState12","showCreateChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","_useInput4","newUrl","onChangeNewUrl","setNewUrl","_useSocket2","emit","channels","v","onLogOut","onClickUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteWorkspace","src","gravatar","s","d","alt","right","top","ws","Link","slice","toUpperCase","find","left","ChannelList","DMList","Switch","Route","path","component","CreateChannelModal","InviteWorkspaceModal","InviteChannelModal","ToastContainer","Redirect","Form","Error","Success","LinkContainer"],"sourceRoot":""}